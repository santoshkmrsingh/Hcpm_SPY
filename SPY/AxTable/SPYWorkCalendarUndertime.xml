<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SPYWorkCalendarUndertime</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SPYWorkCalendarUndertime extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findWorkCalendarUndertime</Name>
				<Source><![CDATA[
    public static SPYWorkCalendarUndertime findWorkCalendarUndertime(CalendarId _calendar,Date _UndertimeDate)
    {
        SPYWorkCalendarUndertime         workCalendarUndertime;
        SPYWorkCalendarUndertimeDate     workCalendarUndertimeDate;
        SPYUndertimeSlabDay              UndertimeSlabDay;
    
        if(WorkCalendarDate::find(_calendar,_UndertimeDate).SPYHoliday == true)
        {
            UndertimeSlabDay = SPYUndertimeSlabDay::Holiday;
        }
        else if(WorkCalendarDate::find(_calendar,_UndertimeDate).ClosedForPickup == true)
        {
            UndertimeSlabDay = SPYUndertimeSlabDay::OffDay;
        }
        else
        {
            UndertimeSlabDay = SPYUndertimeSlabDay::WorkingDay;
        }
    
        select firstonly workCalendarUndertime join workCalendarUndertimeDate
            where workCalendarUndertime.CalendarId == _calendar &&
                  workCalendarUndertime.UndertimeSlabDay == UndertimeSlabDay &&
                  workCalendarUndertimeDate.WorkCalendarUndertime == workCalendarUndertime.RecId &&
                  workCalendarUndertimeDate.FromDate <= _UndertimeDate &&
                  workCalendarUndertimeDate.ToDate >= _UndertimeDate;
        if(workCalendarUndertime)
            return workCalendarUndertime;
    
        select firstonly workCalendarUndertime
            where workCalendarUndertime.CalendarId == _calendar &&
                  workCalendarUndertime.UndertimeSlabDay == UndertimeSlabDay
            notexists join workCalendarUndertimeDate
            where workCalendarUndertimeDate.WorkCalendarUndertime == workCalendarUndertime.RecId;
        if(workCalendarUndertime)
            return workCalendarUndertime;
        else
        {
            select firstonly workCalendarUndertime join workCalendarUndertimeDate
                where workCalendarUndertime.CalendarId == _calendar &&
                        workCalendarUndertime.UndertimeSlabDay == SPYUndertimeSlabDay::AllDay &&
                        workCalendarUndertimeDate.WorkCalendarUndertime == workCalendarUndertime.RecId &&
                        workCalendarUndertimeDate.FromDate <= _UndertimeDate &&
                        workCalendarUndertimeDate.ToDate >= _UndertimeDate;
            if(workCalendarUndertime)
                return workCalendarUndertime;
    
            select firstonly workCalendarUndertime
                where workCalendarUndertime.CalendarId == _calendar &&
                      workCalendarUndertime.UndertimeSlabDay == SPYUndertimeSlabDay::AllDay
                notexists join workCalendarUndertimeDate
                where workCalendarUndertimeDate.WorkCalendarUndertime == workCalendarUndertime.RecId;
            return workCalendarUndertime;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SPYPayroll</ConfigurationKey>
	<DeveloperDocumentation>@SPY1404</DeveloperDocumentation>
	<Label>@SPY1399</Label>
	<TableGroup>Reference</TableGroup>
	<TitleField1>CalendarId</TitleField1>
	<TitleField2>UndertimeSlabDay</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CalendarId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>CalendarId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UndertimeSlabDay</Name>
			<EnumType>SPYUndertimeSlabDay</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WorkCalendarTable</Name>
			<RelatedTable>WorkCalendarTable</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CalendarId</Name>
					<Field>CalendarId</Field>
					<RelatedField>CalendarId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>