<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SPYWorkCalendarOvertime</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SPYWorkCalendarOvertime extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findWorkCalendarOvertime</Name>
				<Source><![CDATA[
    public static SPYWorkCalendarOvertime findWorkCalendarOvertime(CalendarId _calendar,Date _overtimeDate)
    {
        SPYWorkCalendarOvertime         workCalendarOvertime;
        SPYWorkCalendarOvertimeDate     workCalendarOvertimeDate;
        SPYOvertimeSlabDay              overtimeSlabDay;
    
        if(WorkCalendarDate::find(_calendar,_overtimeDate).SPYHoliday == true)
        {
            overtimeSlabDay = SPYOvertimeSlabDay::Holiday;
        }
        else if(WorkCalendarDate::find(_calendar,_overtimeDate).ClosedForPickup == true)
        {
            overtimeSlabDay = SPYOvertimeSlabDay::OffDay;
        }
        else
        {
            overtimeSlabDay = SPYOvertimeSlabDay::WorkingDay;
        }
    
        select firstonly workCalendarOvertime join workCalendarOvertimeDate
            where workCalendarOvertime.CalendarId == _calendar &&
                  workCalendarOvertime.OvertimeSlabDay == overtimeSlabDay &&
                  workCalendarOvertimeDate.WorkCalendarOvertime == workCalendarOvertime.RecId &&
                  workCalendarOvertimeDate.FromDate <= _overtimeDate &&
                  workCalendarOvertimeDate.ToDate >= _overtimeDate;
        if(workCalendarOvertime)
            return workCalendarOvertime;
    
        select firstonly workCalendarOvertime
            where workCalendarOvertime.CalendarId == _calendar &&
                  workCalendarOvertime.OvertimeSlabDay == overtimeSlabDay
            notexists join workCalendarOvertimeDate
            where workCalendarOvertimeDate.WorkCalendarOvertime == workCalendarOvertime.RecId;
        if(workCalendarOvertime)
            return workCalendarOvertime;
        else
        {
            select firstonly workCalendarOvertime join workCalendarOvertimeDate
                where workCalendarOvertime.CalendarId == _calendar &&
                        workCalendarOvertime.OvertimeSlabDay == SPYOvertimeSlabDay::AllDay &&
                        workCalendarOvertimeDate.WorkCalendarOvertime == workCalendarOvertime.RecId &&
                        workCalendarOvertimeDate.FromDate <= _overtimeDate &&
                        workCalendarOvertimeDate.ToDate >= _overtimeDate;
            if(workCalendarOvertime)
                return workCalendarOvertime;
    
            select firstonly workCalendarOvertime
                where workCalendarOvertime.CalendarId == _calendar &&
                      workCalendarOvertime.OvertimeSlabDay == SPYOvertimeSlabDay::AllDay
                notexists join workCalendarOvertimeDate
                where workCalendarOvertimeDate.WorkCalendarOvertime == workCalendarOvertime.RecId;
            return workCalendarOvertime;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SPYPayroll</ConfigurationKey>
	<DeveloperDocumentation>@SPY1078</DeveloperDocumentation>
	<Label>@SPY956</Label>
	<TableGroup>Reference</TableGroup>
	<TitleField1>CalendarId</TitleField1>
	<TitleField2>OvertimeSlabDay</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CalendarId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>CalendarId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OvertimeSlabDay</Name>
			<EnumType>SPYOvertimeSlabDay</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WorkCalendarTable</Name>
			<RelatedTable>WorkCalendarTable</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CalendarId</Name>
					<Field>CalendarId</Field>
					<RelatedField>CalendarId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>