<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SPYDocumentRequestTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SPYDocumentRequestTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canSubmitToWorkflow</Name>
				<Source><![CDATA[
    public boolean canSubmitToWorkflow(str _workflowType = '')
    {
        boolean                         ret;
        SPYDocumentRequestLine          documentRequestLine;
    
        ret = super(_workflowType);
    
        if(this.WorkflowStatus == SPYWorkflowStatus::Created)
        {
            select count(recid) from documentRequestLine
                where documentRequestLine.DocumentRequest == this.RecId;
            if(documentRequestLine.RecId > 0)
                ret = true;
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();
        this.Worker = HcmWorkerLookup::currentWorker();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEditable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves whether the current document request is editable depending on the workflow status.
    /// </summary>
    /// <returns>
    /// true if the status is either not submitted or returned; otherwise, false.
    /// </returns>
    public display SPYIsEditable isEditable()
    {
        switch(this.WorkflowStatus)
        {
            case SPYWorkflowStatus::Created:
            case SPYWorkflowStatus::RequestChange:
                return true;
        }
    
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>submitToWorkflow</Name>
				<Source><![CDATA[
    public void  submitToWorkflow(WorkflowTypeName      _workflowTemplateName,
                                  WorkflowComment       _workflowComment,
                                  boolean               _activatingFromWeb = false)
    {
        Workflow::activateFromWorkflowType(_workflowTemplateName,
                                           this.RecId,
                                           _workflowComment,
                                           _activatingFromWeb,
                                           curUserId());
    
        SPYDocumentRequestTable::updateWorkflowStatus(this.RecId,SPYWorkflowStatus::Submitted);
    }

]]></Source>
			</Method>
			<Method>
				<Name>existByCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the specified record in the <c>SPYDocumentRequestTable</c> table exists.
    /// </summary>
    /// <param name="_code">
    /// The record ID of the record to check for existence.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean existByCode(SPYDocumentRequestCode _code)
    {
    
        return _code && (select firstonly RecId from SPYDocumentRequestTable
                    where SPYDocumentRequestTable.DocumentRequestCode == _code).RecId!= 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>SPYDocumentRequestTable</c> table.
    /// </summary>
    /// /// <param name="_recId">
    ///    The record ID of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///     An enumeration value that indicates the concurrency setting to use on the table; optional.
    /// </param>
    /// <returns>
    ///     A record in the <c>SPYDocumentRequestTable</c> table; otherwise, an empty record.
    /// </returns>
    /// <remarks>
    ///     Finds the specified record in the <c>SPYDocumentRequestTable</c> table.
    /// </remarks>
    public static SPYDocumentRequestTable find(
        SPYDocumentRequestRecId        _recId,
        boolean                        _forUpdate = false,
        ConcurrencyModel               _concurrencyModel = ConcurrencyModel::Auto)
    {
        SPYDocumentRequestTable   documentRequestTable;
    
        documentRequestTable.selectForUpdate(_forUpdate );
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            documentRequestTable.concurrencyModel(_concurrencyModel);
        }
    
         select firstonly documentRequestTable
             where documentRequestTable.RecId == _recId;
    
        return documentRequestTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateWorkflowStatus</Name>
				<Source><![CDATA[
    static void updateWorkflowStatus(SPYDocumentRequestRecId _documentRequest,SPYWorkflowStatus _status)
    {
        SPYDocumentRequestTable   documentRequestTableUpdate;
    
        ttsBegin;
        documentRequestTableUpdate = SPYDocumentRequestTable::find(_documentRequest,true);
        if(documentRequestTableUpdate)
        {
            documentRequestTableUpdate.WorkflowStatus = _status;
            documentRequestTableUpdate.update();
        }
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCode</Name>
				<Source><![CDATA[
    public static SPYDocumentRequestTable findByCode(
    SPYDocumentRequestCode    _code,
    boolean                     _forUpdate = false,
    ConcurrencyModel            _concurrencyModel = ConcurrencyModel::Auto)
    {
        SPYDocumentRequestTable    documentRequestTable;
    
        documentRequestTable.selectForUpdate(_forUpdate );
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            documentRequestTable.concurrencyModel(_concurrencyModel);
        }
    
        select firstonly documentRequestTable
             where documentRequestTable.DocumentRequestCode == _code;
    
        return documentRequestTable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SPYDocumentRequest</ConfigurationKey>
	<DeveloperDocumentation>@SPY:HRRequestTransactionTable</DeveloperDocumentation>
	<Label>@SPY:HRRequestTable</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>DocumentRequestCode</TitleField1>
	<TitleField2>Worker</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<ReplacementKey>Code_AK</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DocumentRequestCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DocumentRequestCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Details</Name>
			<Label>@SYS318405</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DocumentRequestCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentRequestType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Log</Name>
			<Label>@SYS2515</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>createdBy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>createdDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>modifiedBy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>modifiedDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Worker</Name>
			<Label>@SYS80745</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Worker</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Workflow</Name>
			<Label>@PSA1431</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WorkflowStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<ExtendedDataType>Description</ExtendedDataType>
			<Label>@SPYLabel:Description</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DocumentRequestCode</Name>
			<ExtendedDataType>SPYDocumentRequestCode</ExtendedDataType>
			<Label>@SPYLabel:DocumentRequestCode</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Worker</Name>
			<ExtendedDataType>HcmWorkerRecId</ExtendedDataType>
			<Label>@SPYLabel:Worker</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WorkflowStatus</Name>
			<Label>@SPYLabel:WorkflowStatus</Label>
			<EnumType>SPYWorkflowStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PortalNumber</Name>
			<ExtendedDataType>SPYPortalNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DocumentRequestType</Name>
			<ExtendedDataType>SPYDocumentRequestTypeRecId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>Code_AK</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>DocumentRequestCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>HcmWorker</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Worker</Name>
					<Field>Worker</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SPYDocumentRequestTable</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedTable>SPYDocumentRequestTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SPYDocumentRequestType</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SPYDocumentRequestType</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DocumentRequestType</Name>
					<Field>DocumentRequestType</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>