<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SPYDisbursementJournalTemplateSubmitManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The SPYDisbursementJournalTemplateSubmitManager menu item action event handler.
/// </summary>
public class SPYDisbursementJournalTemplateSubmitManager 
{
    SPYDisbursementJournalTable disbursementJournalTable;
    WorkflowVersionTable        workflowConfigurationTable;
    WorkflowComment             workflowComment;
    boolean                     submit;
    WorkflowWorkItemTable       workflowWorkItemTable;
    UserId                      userId;
    MenuItemName                menuItemName;
    WorkflowTypeName            workflowTemplateName;
    Args                        args;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        
        SPYDisbursementJournalTemplateSubmitManager  disbursementJournalSubmitManager;
        Object                          callerDataSource;

        if (_args.dataset() == tableNum(SPYDisbursementJournalTable))
        {
            disbursementJournalSubmitManager = SPYDisbursementJournalTemplateSubmitManager::construct();
            disbursementJournalSubmitManager.parmArgs(_args);
            disbursementJournalSubmitManager.validateDocumentAndSubmit(_args);
        }
        
        callerDataSource = FormDataUtil::getFormDataSource(_args.record());
        if (callerDataSource)
        {
            callerDataSource.research(true);
        }

        _args.caller().updateWorkflowControls();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static SPYDisbursementJournalTemplateSubmitManager construct()
    {
        return new SPYDisbursementJournalTemplateSubmitManager();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDocumentAndSubmit</Name>
				<Source><![CDATA[
    protected void validateDocumentAndSubmit(Args _args)
    {
        boolean ret = true;

        disbursementJournalTable = _args.record();

        this.initFromArgs(_args);

        if (disbursementJournalTable && (_args.menuItemName() == menuitemActionStr(SPYDisbursementJournalTemplateSubmit)
                || _args.menuItemName() == menuitemActionStr(SPYDisbursementJournalApprovalResubmit)))
        {
            ret = true;
        }

        if (ret && this.dialogOk())
        {
            if (this.parmSubmit())
            {
                this.submit();
            }
            else
            {
                this.reSubmitWorkFlow(_args, disbursementJournalTable.RecId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>reSubmitWorkFlow</Name>
				<Source><![CDATA[
    void reSubmitWorkFlow(Args _args, RecId _disbursementJournalRecId)
    {
        SPYDisbursementJournalTable    disbursementJournalTableLocal;
        

        update_recordset disbursementJournalTableLocal setting IsWorkflowToBeResubmitted = true
            where disbursementJournalTableLocal.RecId == _disbursementJournalRecId;

        Workflow::cancelWorkflow(this.parmWorkflowWorkItemtable().CorrelationId, this.parmWorkflowComment());
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialogOk</Name>
				<Source><![CDATA[
    public boolean dialogOk()
    {
        WorkflowSubmitDialog            workflowSubmitDialog;
        WorkflowWorkItemActionDialog    workflowWorkItemActionDialog;
        boolean                         ok;
        
        if (menuItemName == menuitemActionStr(SPYDisbursementJournalTemplateSubmit))
        {
            workflowSubmitDialog = WorkflowSubmitDialog::construct(this.parmWorkflowConfigurationTable());
            workflowSubmitDialog.run();
            this.parmWorkflowComment(workflowSubmitDialog.parmWorkflowComment());
            ok = workflowSubmitDialog.parmIsClosedOK();
        }
        else if (menuItemName == menuitemActionStr(SPYDisbursementJournalApprovalResubmit))//resbmit
        {
            workflowWorkItemActionDialog = WorkflowWorkItemActionDialog::construct( workflowWorkItemTable,
                                                                                    WorkflowWorkItemActionType::Resubmit,
                                                                                    new MenuFunction(menuitemActionStr(SPYDisbursementJournalTemplateSubmit), MenuItemType::Action));
            workflowWorkItemActionDialog.run();
            this.parmWorkflowComment(workflowWorkItemActionDialog.parmWorkflowComment());
            ok = workflowWorkItemActionDialog.parmIsClosedOK();
            userId = workflowWorkItemActionDialog.parmTargetUser();
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>submit</Name>
				<Source><![CDATA[
    void submit()
    {
        ttsbegin;
        if (this.setStatus2Submitted())
        {
            this.activateWorkflow();
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setStatus2Submitted</Name>
				<Source><![CDATA[
    public boolean setStatus2Submitted()
    {
        boolean ret = true;

        disbursementJournalTable.WorkflowStatus = SPYWorkflowStatus::Submitted;
        disbursementJournalTable.SubmittedBy = DirPersonUserEx::worker2UserId(HcmWorkerLookup::currentWorker());
        disbursementJournalTable.SubmittedDateTime = DateTimeUtil::getSystemDateTime();

        disbursementJournalTable.update();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>activateWorkflow</Name>
				<Source><![CDATA[
    protected void activateWorkflow()
    {
        Workflow::activateFromWorkflowType(this.parmWorkflowTemplateName(),
                                               disbursementJournalTable.RecId,
                                               this.parmWorkflowComment(),
                                               NoYes::No,
                                               disbursementJournalTable.SubmittedBy);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromArgs</Name>
				<Source><![CDATA[
    protected void initFromArgs(Args _args)
    {
        if (_args.menuItemName() == menuitemActionStr(SPYDisbursementJournalTemplateSubmit)
        || _args.menuItemName() == menuitemActionStr(SPYDisbursementJournalApprovalResubmit))
        {
            this.init(_args.record(), _args.menuItemName(), _args.caller().getActiveWorkflowConfiguration(), _args.caller().getActiveWorkflowWorkItem());
        }
        else
        {
            this.init(_args.record(), _args.menuItemName(), null, null);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init(   Common                      _documentRecord,
                        MenuItemName                _menuItemName,
                        WorkflowVersionTable        _workflowConfigurationTable,
                        WorkflowWorkItemTable       _workflowWorkItemTable
                        )
    {
        if (_documentRecord.TableId == tableNum(SPYDisbursementJournalTable))
        {
            this.parmDisbursementJournalTable(_documentRecord);
        }

        this.parmSubmit(_menuItemName == menuitemActionStr(SPYDisbursementJournalTemplateSubmit));
        this.parmMenuItemName(_menuItemName);
        this.parmWorkflowConfigurationTable(_workflowConfigurationTable);
        this.parmWorkflowWorkItemtable(_workflowWorkItemTable);
        this.parmWorkflowTemplateName(this.parmWorkflowConfigurationTable().workflowTable().TemplateName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMenuItemName</Name>
				<Source><![CDATA[
    public MenuItemName parmMenuItemName(MenuItemName _menuItemName = menuItemName)
    {
        menuItemName = _menuItemName;

        return menuItemName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDisbursementJournalTable</Name>
				<Source><![CDATA[
    public SPYDisbursementJournalTable parmDisbursementJournalTable(SPYDisbursementJournalTable _disbursementJournalTable = disbursementJournalTable)
    {
        disbursementJournalTable = _disbursementJournalTable;

        return disbursementJournalTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSubmit</Name>
				<Source><![CDATA[
    public boolean parmSubmit(boolean _submit = submit)
    {
        submit = _submit;

        return submit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkflowComment</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>WorkflowComment</c> record.
    /// </summary>
    /// <param name="_workflowComment">
    ///    The <c>WorkflowComment</c> record to set.
    /// </param>
    /// <returns>
    ///    The current <c>WorkflowComment</c> record.
    /// </returns>
    public WorkflowComment parmWorkflowComment(WorkflowComment _workflowComment = workflowComment)
    {
        workflowComment = _workflowComment;

        return workflowComment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkflowConfigurationTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>WorkflowConfigurationTable</c> record.
    /// </summary>
    /// <param name="_workflowConfigurationTable">
    ///    The <c>WorkflowVersionTable</c> record to set.
    /// </param>
    /// <returns>
    ///    The current <c>WorkflowVersionTable</c> record.
    /// </returns>
    public WorkflowVersionTable parmWorkflowConfigurationTable(WorkflowVersionTable _workflowConfigurationTable = workflowConfigurationTable)
    {
        workflowConfigurationTable = _workflowConfigurationTable;

        return workflowConfigurationTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkflowTemplateName</Name>
				<Source><![CDATA[
    public WorkflowTypeName parmWorkflowTemplateName(WorkflowTypeName _workflowTemplateName = workflowTemplateName)
    {
        workflowTemplateName = _workflowTemplateName;

        return workflowTemplateName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkflowWorkItemtable</Name>
				<Source><![CDATA[
    public WorkflowWorkItemTable parmWorkflowWorkItemtable(WorkflowWorkItemTable _workflowWorkItemTable = workflowWorkItemTable)
    {
        workflowWorkItemTable = _workflowWorkItemTable;

        return workflowWorkItemTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmArgs</Name>
				<Source><![CDATA[
    public Args parmArgs(Args _args = args)
    {
        args = _args;

        return args;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>