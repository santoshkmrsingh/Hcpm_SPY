<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SPYAbsenceJourPostServiceController</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SPYAbsenceJourPostServiceController extends SysOperationServiceController
{
    FormRun                         absenceJournalPostEdit;
    SPYAbsenceJourPostContract      absenceJourPostContract;
    SPYAbsenceJournalCode           absenceJournalCode;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public IDialogable dialog()
    {
        if (!absenceJournalPostEdit)
        {
            absenceJournalPostEdit = classfactory.formRunClass(SPYAbsenceJourPostServiceController::newClientArgs(formStr(SPYAbsenceJournalPostEdit), this));
            absenceJournalPostEdit.init();
        }
    
        return absenceJournalPostEdit as IDialogable;
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialogMake</Name>
				<Source><![CDATA[
    protected IDialogable dialogMake()
    {
        IDialogable dlg = this.dialog();
    
        if (this.canGoBatch())
           this.batchInfo().dialog(dlg);
    
        return dlg;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialogPostRun</Name>
				<Source><![CDATA[
    protected void dialogPostRun()
    {
        //super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>cleanupDialog</Name>
				<Source><![CDATA[
    protected void  cleanupDialog()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialogRun</Name>
				<Source><![CDATA[
    protected SysOperationStartResult dialogRun()
    {
        SysOperationStartResult result;
        CompanyId               companyId = curext();

        result = super();

        if (result == SysOperationStartResult::Canceled)
        {
            this.cleanupDialog();
        }

        if(companyId != curext())
        {
            appl.setDefaultCompany(companyId, false);
        }
        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAsenceJourPostContract</Name>
				<Source><![CDATA[
    public SPYAbsenceJourPostContract getAsenceJourPostContract()
    {
        return absenceJourPostContract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAbsenceJournalCode</Name>
				<Source><![CDATA[
    SPYAbsenceJournalCode parmAbsenceJournalCode(SPYAbsenceJournalCode _absenceJournalCode = absenceJournalCode)
    {
        absenceJournalCode = _absenceJournalCode;
    
        return absenceJournalCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmServiceContract</Name>
				<Source><![CDATA[
    public SPYAbsenceJourPostContract parmServiceContract(SPYAbsenceJourPostContract _absenceJourPostContract = absenceJourPostContract)
    {
        absenceJourPostContract = _absenceJourPostContract;
        return absenceJourPostContract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static SPYAbsenceJourPostServiceController construct(IdentifierName _className  = '',
                                                           IdentifierName _methodName = '',
                                                           SysOperationExecutionMode _executionMode = SysOperationExecutionMode::Synchronous)
    {
        return new SPYAbsenceJourPostServiceController(_className,_methodName,_executionMode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        SPYAbsenceJourPostServiceController     absenceJourPostServiceController;
        str                                     className, methodName;
        SysOperationExecutionMode               mode;
        SPYAbsenceJournalTable                  absenceJournalTable;
    
        [className, methodName, mode] = SysOperationServiceController::parseServiceInfo(args);
        mode = SysOperationExecutionMode::Synchronous; ///
        absenceJourPostServiceController = SPYAbsenceJourPostServiceController::construct(className, methodName, mode);
    
        if(args.record() is SPYAbsenceJournalTable)
            absenceJournalTable = args.record() as SPYAbsenceJournalTable;
        absenceJourPostServiceController.parmAbsenceJournalCode(absenceJournalTable.JournalCode);
        //payProcessServiceController.startOperation();
        if(absenceJourPostServiceController.prompt())
            absenceJourPostServiceController.run();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newClientArgs</Name>
				<Source><![CDATA[
    client static Args  newClientArgs(str _formName, SPYAbsenceJourPostServiceController _absenceJourPostServiceController)
    {
        Args  args = new  Args();
        args.name(_formName);
        args.caller(_absenceJourPostServiceController);
        return args;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>