<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SPYPayLedgerDeleteServiceController</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SPYPayLedgerDeleteServiceController extends SysOperationServiceController
{
    FormRun                         payLedgerDeleteEdit;
    SPYPayLedgerDeleteContract      payLedgerDeleteContract;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public IDialogable dialog()
    {
        if (!payLedgerDeleteEdit)
        {
            payLedgerDeleteEdit = classfactory.formRunClass(SPYPayLedgerDeleteServiceController::newClientArgs(formStr(SPYPayLedgerDeleteEdit), this));
            payLedgerDeleteEdit.init();
        }
    
        return payLedgerDeleteEdit as IDialogable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialogMake</Name>
				<Source><![CDATA[
    protected IDialogable dialogMake()
    {
        IDialogable dlg = this.dialog();

        if (this.canGoBatch())
        {
            this.batchInfo().dialog(dlg);
        }

        return dlg;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialogPostRun</Name>
				<Source><![CDATA[
    protected void dialogPostRun()
    {
        //super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>cleanupDialog</Name>
				<Source><![CDATA[
    protected void  cleanupDialog()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialogRun</Name>
				<Source><![CDATA[
    protected SysOperationStartResult dialogRun()
    {
        SysOperationStartResult result;
        CompanyId               companyId = curext();

        result = super();

        if (result == SysOperationStartResult::Canceled)
        {
            this.cleanupDialog();
        }

        if(companyId != curext())
        {
            appl.setDefaultCompany(companyId, false);
        }
        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPayLedgerDeleteContract</Name>
				<Source><![CDATA[
    public SPYPayLedgerDeleteContract getPayLedgerDeleteContract()
    {
        return payLedgerDeleteContract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmServiceContract</Name>
				<Source><![CDATA[
    public SPYPayLedgerDeleteContract parmServiceContract(SPYPayLedgerDeleteContract _payLedgerDeleteContract = payLedgerDeleteContract)
    {
        payLedgerDeleteContract = _payLedgerDeleteContract;
        return payLedgerDeleteContract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static SPYPayLedgerDeleteServiceController construct(IdentifierName _className  = '',
                                                         IdentifierName _methodName = '',
                                                         SysOperationExecutionMode _executionMode = SysOperationExecutionMode::Synchronous)
    {
        return new SPYPayLedgerDeleteServiceController(_className,_methodName,_executionMode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        SPYPayLedgerDeleteServiceController     payLedgerDeleteServiceController;
        str                                     className, methodName;
        SysOperationExecutionMode               mode;
        FormRun                                 formRun;
    
        [className, methodName, mode] = SysOperationServiceController::parseServiceInfo(args);
        mode = SysOperationExecutionMode::Synchronous;
        payLedgerDeleteServiceController = SPYPayLedgerDeleteServiceController::construct(className, methodName, mode);
    
        if(payLedgerDeleteServiceController.prompt())
            payLedgerDeleteServiceController.run();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newClientArgs</Name>
				<Source><![CDATA[
    client static Args  newClientArgs(str _formName, SPYPayLedgerDeleteServiceController _payLedgerDeleteServiceController)
    {
        Args  args = new  Args();
        args.name(_formName);
        args.caller(_payLedgerDeleteServiceController);
        return args;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>