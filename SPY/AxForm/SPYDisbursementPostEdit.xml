<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SPYDisbursementPostEdit</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
/* TODO: (Code Upgrade) [Vertical Button Group Rule] Please manually fix the vertical button group [GroupParametersButtonGroup] in this form, it does not conform to any well known rules. The button group does not have any data source or its data source is not part of any root or linked data source query. */
[Form]
public class SPYDisbursementPostEdit extends FormRun implements IDialogable
{
    SPYDisbursementPostServiceController    disbursementPostServiceController;
    Query                                   workerQuery;
    QueryRun                                workerQueryRun;
    container                               workerQueryPack;
    SPYDisbursementPostServiceContract      contract;
    boolean                                 calledFromMasterProcess;
}
]]></Source>
			</Method>
			<Method>
				<Name>formRun</Name>
				<Source><![CDATA[
    public FormRun formRun()
    {
        //Required by the SysOperation framework.
        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>closedOk</Name>
				<Source><![CDATA[
    public boolean closedOk()
    {
        boolean     ret;
    
        ret = super();
    
        if (contract)
        {
            contract.parmPayrollPeriodLine(PayrollPeriod_ReferenceGroup.value());
            contract.parmWorkerQuery(workerQueryPack);
            
            if (calledFromMasterProcess)
            {
                contract.parmPayrollParameterState(disbursementPostServiceController.parmPayrollParameterState());
            }
            else
            {
                contract.parmCompBankAccountId(CompanyBankAccountId.text());
                contract.parmPayrollPeriodLineTo(PayrollPeriod_ReferenceGroupTo.value());
                contract.parmTransDate(PostingDate.dateValue());
            }
            contract.parmJournalDescription(JourDesc.text());
            
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();
        if (element.args().caller() && element.args().caller() is SPYDisbursementPostServiceController)
        {
            disbursementPostServiceController = element.args().caller() as SPYDisbursementPostServiceController;
            
            if (disbursementPostServiceController.parmPayrollParameterState() &&
                disbursementPostServiceController.parmPayrollParameterState().parmCalledFromMasterProcess())
            {
                calledFromMasterProcess = true;
                element.design().caption("@SPY:DisbursementLedgerPost");
            }
            workerQuery = this.initWorkerApplQuery();
            workerQueryRun = new QueryRun(workerQuery);
           
            
            if(disbursementPostServiceController.getDataContractObject() is SPYDisbursementPostServiceContract)
                contract = disbursementPostServiceController.getDataContractObject() as SPYDisbursementPostServiceContract;
        }        
    
        element.setEnable();
        element.initializeValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initWorkerApplQuery</Name>
				<Source><![CDATA[
    Query initWorkerApplQuery()
    {
        return new Query(queryStr(SPYHcmWorker_All));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPayelementApplQuery</Name>
				<Source><![CDATA[
    Query initPayelementApplQuery()
    {
        return new Query(queryStr(SPYPayElement));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeValue</Name>
				<Source><![CDATA[
    public void initializeValue() //TODO UPGRADE
    {
        PayrollPeriod_ReferenceGroup.value(contract.parmPayrollPeriodLine());
        PayrollPeriod_ReferenceGroupTo.value(contract.parmPayrollPeriodLine());
        PostingDate.dateValue(SPYPayrollPeriodLine::find(PayrollPeriod_ReferenceGroupTo.value()).PeriodEndDate);
        workerQueryPack = contract.parmWorkerQuery();
        CompanyBankAccountId.text(SPYPayrollParameters::find().DisbursementBankAccount);
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>initWorkerQuery</Name>
				<Source><![CDATA[
    void  initWorkerQuery()
    {
        if(workerQueryRun.prompt())
        {
            workerQueryPack = workerQueryRun.pack();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>runBase</Name>
				<Source><![CDATA[
    SPYDisbursementPostServiceController runBase()
    {//Method must be named runBase() for the integration to the Batch dialog to work.
        return disbursementPostServiceController;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEnable</Name>
				<Source><![CDATA[
    public void setEnable()
    {
        if(calledFromMasterProcess)
        {
            ChooseWorker.visible(false);
            CompanyBankAccountId.visible(false);
            PayrollPeriod_ReferenceGroupTo.visible(false);
            PostingDate.visible(false);
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>ChooseWorker</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void  clicked()
        {
            super();
            element.initWorkerQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PayrollPeriod_ReferenceGroupTo</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        /// <returns></returns>
        public boolean modified()
        {
            boolean ret;
    
            ret = super();

            PostingDate.dateValue(SPYPayrollPeriodLine::find(PayrollPeriod_ReferenceGroupTo.value()).PeriodEndDate);
    
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CompanyBankAccountId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Query                   query = new Query();
            QueryBuildDataSource    qbds;
        
            // Instantiate sysTableLookup object using table which will provide the visible fields
            SysTableLookup sysTableLookup = sysTableLookup::newParameters(tableNum(BankAccountTable), this);
        
            // Create the query.
            qbds= query.addDataSource(tableNum(BankAccountTable));
            qbds.addRange(fieldNum(BankAccountTable, SPYPayrollDisbursement)).value(queryValue(NoYes::Yes));
        
            // Set the query to be used by the lookup form
            sysTableLookup.parmQuery(query);
        
            // Specify the fields to show in the form.
            sysTableLookup.addLookupfield(fieldNum(BankAccountTable, AccountID));
            sysTableLookup.addLookupfield(fieldNum(BankAccountTable, Name));
            sysTableLookup.addLookupfield(fieldNum(BankAccountTable, BankGroupId));
        
            // Perform the lookup
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">Bank journal generation</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>FormActionPaneControl1</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>GroupParametersButtonGroup</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ChooseWorker</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYS85423</HelpText>
								<Skip>Yes</Skip>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Text>@SPY1426</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<Style>Strip</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Group_</Name>
				<ElementPosition>805306366</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>Custom</Pattern>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GroupParameter</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>PayrollPeriod_ReferenceGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ReferenceGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<ExtendedDataType>SPYPayrollPeriodLineRecId</ExtendedDataType>
								<Label>Payroll period from</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>PayrollPeriod_ReferenceGroupTo</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ReferenceGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<ExtendedDataType>SPYPayrollPeriodLineRecId</ExtendedDataType>
								<Label>Payroll period to</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>PostingDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Date</Type>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>TransDate</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>JourDesc</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>Description</ExtendedDataType>
								<Label>@SPY1116</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>CompanyBankAccountId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1825361097</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>CompanyBankAccountId</ExtendedDataType>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<TopMode>BottomEdge</TopMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OK</Name>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormMenuFunctionButtonControl">
						<Name>ButtonBatch</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>MenuFunctionButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<MenuItemName>BatchDialog</MenuItemName>
						<MenuItemType>Action</MenuItemType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>