<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SPYPayLoanPostEdit</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
/* TODO: (Code Upgrade) [Vertical Button Group Rule] Please manually fix the vertical button group [GroupParametersButtonGroup] in this form, it does not conform to any well known rules. The button group does not have any data source or its data source is not part of any root or linked data source query. */
[Form]
public class SPYPayLoanPostEdit extends FormRun implements IDialogable
{
    SPYPayLoanPostServiceController             payLoanPostServiceController;
    Query                                       loanTableQuery;
    QueryRun                                    loanTableQueryRun;
    container                                   queryPack;
    SPYPayLoanPostContract                      payLoanPostContract;

}
]]></Source>
			</Method>
			<Method>
				<Name>formRun</Name>
				<Source><![CDATA[
    public FormRun formRun()
    {
        //Required by the SysOperation framework.
        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>closedOk</Name>
				<Source><![CDATA[
    public boolean closedOk()
    {
        boolean                     ret;
    
        ret = super();
    
        if(payLoanPostContract)
        {
            payLoanPostContract.parmLoanTableQuery(loanTableQuery.pack());
            payLoanPostContract.parmStartDate(StartDate.dateValue());
            payLoanPostContract.parmEndDate(EndDate.dateValue());
            payLoanPostContract.parmInstallmentPeriod(InstallmentPeriod.value());
            payLoanPostContract.parmNoOfInstallments(NoOfInstallments.value());
            payLoanPostContract.parmCalculatedAmount(CalculatedInstallmentAmount.realValue());
            payLoanPostContract.parmProposedAmount(ProposedInstallmentAmount.realValue());
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();
        if(element.args().caller() && element.args().caller() is SPYPayLoanPostServiceController)
        {
            payLoanPostServiceController = element.args().caller() as SPYPayLoanPostServiceController;
            loanTableQuery = this.initApplQuery();
        }        
    
        element.setTitleText();
    
        if(payLoanPostServiceController.getDataContractObject() is SPYPayLoanPostContract)
            payLoanPostContract = payLoanPostServiceController.getDataContractObject();
    
        element.initializeValue();
        element.setEnable();
    
        loanTableQuery.dataSourceTable(tableNum(SPYPayLoanTable)).
        addRange(fieldNum(SPYPayLoanTable,PayLoanCode)).value(payLoanPostServiceController.parmPayLoanCode());
        loanTableQueryRun = new QueryRun(loanTableQuery);
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>initApplQuery</Name>
				<Source><![CDATA[
    Query initApplQuery()
    {
        return new Query(queryStr(SPYPayLoanQuery));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeValue</Name>
				<Source><![CDATA[
    public void initializeValue()
    {
        SPYPayLoanTable         payLoanTable = SPYPayLoanTable::findByCode(payLoanPostServiceController.parmPayLoanCode());
        SPYPayLoanLine          payLoanLine;
        SPYPayLoanLedger        payLoanLedger;
        SPYPayrollPeriodLine    payrollPeriodLine;
        SPYPayrollPeriod        payrollPeriod;
        Boolean                 reschedule;
    /*
        while select payLoanLedger join payLoanLine join payrollPeriodLine order by PeriodStartDate join payrollPeriod
            where payLoanLedger.PayLoanLine == payLoanLine.RecId &&
                  payLoanLedger.PayLoanTransType == SPYPayLoanTransType::Recovery &&
                  payLoanLine.PayLoan == payLoanTable.RecId &&
                  payLoanLedger.PayrollPeriodLine == payrollPeriodLine.RecId &&
                  payrollPeriod.RecId == payrollPeriodLine.PayrollPeriod
        {
            reschedule = true;
            if(!payLoanLedger.amountRecovered())
            {
                StartDate.dateValue(payrollPeriodLine.PeriodStartDate);
                InstallmentPeriod.value(payrollPeriod.RecId);
            }
        }
    */
        if(!reschedule)
        {
            select firstOnly payLoanLine
                where payLoanLine.PayLoan == payLoanTable.RecId;
    
            StartDate.dateValue(payLoanLine.InstallmentStartDate);
            EndDate.dateValue(payLoanLine.InstallmentEndDate);
            InstallmentPeriod.value(payLoanLine.InstallmentPeriod);
            NoOfInstallments.value(payLoanLine.NoOfInstallment);
        }
        this.setAmount(NoOfInstallments.value());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAmount</Name>
				<Source><![CDATA[
    public void setAmount(int  _noOfPeriod)
    {
        SPYPayLoanTable         payLoanTable = SPYPayLoanTable::findByCode(payLoanPostServiceController.parmPayLoanCode());
        SPYPayLoanLine           payLoanLine;
        SPYPayLoanLedger      payLoanLedger;
        SPYAmount                 installmentAmount, amountRecovered, balanceAmount;

        select firstonly payLoanLine
            where payLoanLine.PayLoan == payLoanTable.RecId;
        while select payLoanLedger
            where payLoanLedger.PayLoanLine == payLoanLine.RecId &&
                  (payLoanLedger.PayLoanTransType == SPYPayLoanTransType::Recovery ||
                    payLoanLedger.PayLoanTransType == SPYPayLoanTransType::CashSettlement)
        {
            amountRecovered += payLoanLedger.amountRecoveredTransCur();
        }
        balanceAmount = payLoanLine.Amount - amountRecovered;
        int     period = _noOfPeriod;
        if(period)
            installmentAmount = balanceAmount / period;
        CalculatedInstallmentAmount.realValue(installmentAmount);
        ProposedInstallmentAmount.realValue(installmentAmount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    void  initQuery()
    {
    
        /*
        if(adjustmentTableQueryRun.prompt())
        {
            queryPack = adjustmentTableQueryRun.pack();
        }
        */
        loanTableQueryRun.prompt();
    
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>runBase</Name>
				<Source><![CDATA[
    SPYPayLoanPostServiceController runBase()
    {//Method must be named runBase() for the integration to the Batch dialog to work.
        return payLoanPostServiceController;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEnable</Name>
				<Source><![CDATA[
    public void setEnable()
    {
        if(payLoanPostServiceController)
        {
            switch(payLoanPostServiceController.parmPayLoanTransType())
            {
                case SPYPayLoanTransType::Disbursement :
                    GroupInstallment.visible(false);
                    break;
    
                case SPYPayLoanTransType::Recovery :
                    GroupInstallment.visible(true);
                    break;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTitleText</Name>
				<Source><![CDATA[
    public void setTitleText()
    {
        headerTitle.text("@SPY355");
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>Choose</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void  clicked()
        {
            super();
            element.initQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>NoOfInstallments</Name>
				<Type>Integer</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        /// <returns></returns>
        public boolean modified()
        {
            boolean ret;
    
            ret = super();
            element.setAmount(this.value());
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProposedInstallmentAmount</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        /// <returns></returns>
        public boolean validate()
        {
            boolean ret;
    
            ret = super();/*
            if(this.realValue() > CalculatedInstallmentAmount.realValue())
                ret = checkFailed(strFmt("@SPY:ProposedAmountCantMoreThanCalculatedAmount"));*/
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@SPY335</Caption>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>FormActionPaneControl1</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>GroupParametersButtonGroup</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>Choose</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>357913940</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYS85423</HelpText>
								<Skip>Yes</Skip>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Text>@SYS2245</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<Style>Strip</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Group_</Name>
				<ElementPosition>805306366</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Group1</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>HeaderTitle</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Skip>Yes</Skip>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SPY0</Label>
								<Style>TitleField</Style>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GroupInstallment</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1342177278</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>StartDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>TransDate</ExtendedDataType>
								<Label>@SYS35856</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>EndDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>TransDate</ExtendedDataType>
								<Label>@SYS35858</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>InstallmentPeriod</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ReferenceGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<ExtendedDataType>SPYPayrollPeriodRecId</ExtendedDataType>
								<Label>@SPY370</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormIntegerControl">
								<Name>NoOfInstallments</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Integer</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SPY364</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>CalculatedInstallmentAmount</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Real</Type>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>SPYAmount</ExtendedDataType>
								<Label>@SPY:CalculatedInstallmentAmount</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>ProposedInstallmentAmount</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Real</Type>
								<FormControlExtension
									i:nil="true" />
								<AllowNegative>No</AllowNegative>
								<ExtendedDataType>SPYAmount</ExtendedDataType>
								<Label>@SPY:ProposedInstallmentAmount</Label>
							</AxFormControl>
						</Controls>
						<Caption>@SPY362</Caption>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<TopMode>BottomEdge</TopMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OK</Name>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormMenuFunctionButtonControl">
						<Name>ButtonBatch</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>MenuFunctionButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<MenuItemName>BatchDialog</MenuItemName>
						<MenuItemType>Action</MenuItemType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>