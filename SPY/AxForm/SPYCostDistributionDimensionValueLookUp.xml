<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SPYCostDistributionDimensionValueLookUp</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class SPYCostDistributionDimensionValueLookUp extends FormRun
{
    container                   imageContainer;

    boolean                     okButtonClicked;

    object                      callerForm;
    SPYCostDistributionBasis    costDistributionBasis;
    // New code added Start by Lakshya on 18/09/2017 for Project "Cost Split"
    str                         dimensionAttributeNo;
}
]]></Source>
			</Method>
			<Method>
				<Name>closeSelect</Name>
				<Source><![CDATA[
    // New code added Ended by Lakshya on 18/09/2017 for Project "Cost Split"
    public void closeSelect(str _selectString)
    {
        super(_selectString);
        // New code added Start by Lakshya on 18/09/2017 for Project "Cost Split"
        if(callerForm)
            switch(dimensionAttributeNo)
            {
                case "1":
                    callerForm.updateDimAttrValue1(SPYTmpCostDistributionDimValue.DimensionAttributeValue);
                    break;

                case "2":
                    callerForm.updateDimAttrValue2(SPYTmpCostDistributionDimValue.DimensionAttributeValue);
                    break;

                case "3":
                    callerForm.updateDimAttrValue3(SPYTmpCostDistributionDimValue.DimensionAttributeValue);
                    break;

                case "4":
                    callerForm.updateDimAttrValue4(SPYTmpCostDistributionDimValue.DimensionAttributeValue);
                    break;

                case "5":
                    callerForm.updateDimAttrValue5(SPYTmpCostDistributionDimValue.DimensionAttributeValue);
                    break;

                case "6":
                    callerForm.updateDimAttrValue6(SPYTmpCostDistributionDimValue.DimensionAttributeValue);
                    break;

                case "7":
                    callerForm.updateDimAttrValue7(SPYTmpCostDistributionDimValue.DimensionAttributeValue);
                    break;

                case "8":
                    callerForm.updateDimAttrValue8(SPYTmpCostDistributionDimValue.DimensionAttributeValue);
                    break;
            }
        // New code added Ended by Lakshya on 18/09/2017 for Project "Cost Split"
        //callerForm.updateDimAttrValue(SPYTmpCostDistributionDimValue.DimensionAttributeValue);
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeSelectRecord</Name>
				<Source><![CDATA[
    public void closeSelectRecord(Common _selectedRecord)
    {
        if (okButtonClicked)
        {
            if (callerForm.name() == formStr(SysTableBrowser))
            {
                element.closeSelect(int642str(_selectedRecord.RecId));
            }
            else
            {
                super(_selectedRecord);
            }
        }
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        SPYPayrollPeriod    payrollPeriodTable;
    
        super();
        callerForm = element.args().caller();
        if(callerForm)
        {
            costDistributionBasis = callerForm.parmCostDistributionBasis();
        }
        if(element.args())
            dimensionAttributeNo = element.args().parm();
        if(!dimensionAttributeNo)
            dimensionAttributeNo = "1";

        okButtonClicked = false;
        element.refreshDimensionValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshDimensionValue</Name>
				<Source><![CDATA[
    void refreshDimensionValue()
    {
        /*
        DimensionAttribute              dimensionAttribute = DimensionAttribute::find(SPYPayrollParameters::find().CostDistributionDimension1);
        FinancialTagCategory            financialTagCategory;
        DictTable                       dictTable = new DictTable(dimensionAttribute.BackingEntityType);
        Common                          dimValue = dictTable.makeRecord();
        DimensionAttributeValue         dimAttributeValue;
        */

        // New code added Start by Lakshya on 18/09/2017 for Project "Cost Split"
        DimensionAttribute              dimensionAttribute;
        DictTable                       dictTable;
        Common                          dimValue;
        DimensionAttributeValue         dimAttributeValue;
        
        switch(dimensionAttributeNo)
        {
            case "1":
                dimensionAttribute = DimensionAttribute::find(SPYPayrollParameters::find().CostDistributionDimension1);
                break;

            case "2":
                dimensionAttribute = DimensionAttribute::find(SPYPayrollParameters::find().CostDistributionDimension2);
                break;

            case "3":
                dimensionAttribute = DimensionAttribute::find(SPYPayrollParameters::find().CostDistributionDimension3);
                break;

            case "4":
                dimensionAttribute = DimensionAttribute::find(SPYPayrollParameters::find().CostDistributionDimension4);
                break;

            case "5":
                dimensionAttribute = DimensionAttribute::find(SPYPayrollParameters::find().CostDistributionDimension5);
                break;

            case "6":
                dimensionAttribute = DimensionAttribute::find(SPYPayrollParameters::find().CostDistributionDimension6);
                break;

            case "7":
                dimensionAttribute = DimensionAttribute::find(SPYPayrollParameters::find().CostDistributionDimension7);
                break;

            case "8":
                dimensionAttribute = DimensionAttribute::find(SPYPayrollParameters::find().CostDistributionDimension8);
                break;
        }
        if(!dimensionAttribute)
        throw error("Cost dimension attribute is not defined in parameter.");
        dictTable = new DictTable(dimensionAttribute.BackingEntityType);
        dimValue = dictTable.makeRecord();
        // New code added Ended by Lakshya on 18/09/2017 for Project "Cost Split"

        switch(costDistributionBasis)
        {
            case SPYCostDistributionBasis::SplitByRevenue :
                if (dimensionAttribute.Type == DimensionAttributeType::CustomList)
                {
                    while select dimValue join dimAttributeValue
                        where dimValue.(fieldName2id(dimensionAttribute.BackingEntityType,"FinancialTagCategory")) == dimensionAttribute.financialTagCategory() &&
                              dimValue.RecId == dimAttributeValue.EntityInstance &&
                              dimAttributeValue.DimensionAttribute == dimensionAttribute.RecId &&
                              dimAttributeValue.IsTotal
                    {
                        SPYTmpCostDistributionDimValue.DimensionValue = dimValue.(fieldName2id(dimensionAttribute.BackingEntityType,"Value"));
                        SPYTmpCostDistributionDimValue.Description = dimValue.(fieldName2id(dimensionAttribute.BackingEntityType,"Description"));
                        SPYTmpCostDistributionDimValue.DimensionAttributeValue = dimAttributeValue.RecId;
                        SPYTmpCostDistributionDimValue.insert();
                    }
                }
                else
                {
                    while select dimValue join dimAttributeValue
                        where dimValue.(fieldName2id(dimensionAttribute.BackingEntityType,"Key")) == dimAttributeValue.EntityInstance &&
                              dimAttributeValue.DimensionAttribute == dimensionAttribute.RecId &&
                              dimAttributeValue.IsTotal
                    {
                        SPYTmpCostDistributionDimValue.DimensionValue = dimValue.(fieldName2id(dimensionAttribute.BackingEntityType,"Value"));
                        SPYTmpCostDistributionDimValue.Description = dimValue.(fieldName2id(dimensionAttribute.BackingEntityType,"Name"));
                        SPYTmpCostDistributionDimValue.DimensionAttributeValue = dimAttributeValue.RecId;
                        SPYTmpCostDistributionDimValue.insert();
                    }
                }
                break;
    
            case SPYCostDistributionBasis::SplitByDimension :
            case SPYCostDistributionBasis::SplitEqually :
                if (dimensionAttribute.Type == DimensionAttributeType::CustomList)
                {
                    while select dimValue join dimAttributeValue
                        where dimValue.(fieldName2id(dimensionAttribute.BackingEntityType,"FinancialTagCategory")) == dimensionAttribute.financialTagCategory() &&
                              dimValue.RecId == dimAttributeValue.EntityInstance &&
                              dimAttributeValue.DimensionAttribute == dimensionAttribute.RecId &&
                              !dimAttributeValue.IsTotal
                    {
                        SPYTmpCostDistributionDimValue.DimensionValue = dimValue.(fieldName2id(dimensionAttribute.BackingEntityType,"Value"));
                        SPYTmpCostDistributionDimValue.Description = dimValue.(fieldName2id(dimensionAttribute.BackingEntityType,"Description"));
                        SPYTmpCostDistributionDimValue.DimensionAttributeValue = dimAttributeValue.RecId;
                        SPYTmpCostDistributionDimValue.insert();
                    }
                }
                else
                {
                    // New code added Start by Lakshya for Project "Cost Split"
                    while select dimValue notExists join dimAttributeValue
                    where dimValue.(fieldName2id(dimensionAttribute.BackingEntityType,"Key")) == dimAttributeValue.EntityInstance &&
                          dimAttributeValue.DimensionAttribute == dimensionAttribute.RecId
                    {
                        SPYTmpCostDistributionDimValue.DimensionValue = dimValue.(fieldName2id(dimensionAttribute.BackingEntityType,"Value"));
                        SPYTmpCostDistributionDimValue.Description = dimValue.(fieldName2id(dimensionAttribute.BackingEntityType,"Name"));
                        SPYTmpCostDistributionDimValue.DimensionAttributeValue = dimAttributeValue.RecId;
                        SPYTmpCostDistributionDimValue.insert();
                    }
                    // New code added Ended by Lakshya for Project "Cost Split"

                    while select dimValue join dimAttributeValue
                        where dimValue.(fieldName2id(dimensionAttribute.BackingEntityType,"Key")) == dimAttributeValue.EntityInstance &&
                              dimAttributeValue.DimensionAttribute == dimensionAttribute.RecId &&
                              !dimAttributeValue.IsTotal
                    {
                        SPYTmpCostDistributionDimValue.DimensionValue = dimValue.(fieldName2id(dimensionAttribute.BackingEntityType,"Value"));
                        SPYTmpCostDistributionDimValue.Description = dimValue.(fieldName2id(dimensionAttribute.BackingEntityType,"Name"));
                        SPYTmpCostDistributionDimValue.DimensionAttributeValue = dimAttributeValue.RecId;
                        SPYTmpCostDistributionDimValue.insert();
                    }
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        /*
        if (element.selectTarget() is FormReferenceGroupControl)
        {
            this.selectRecordMode(SPYTmpCostDistributionDimValue_DimensionValue);
        }
        else if (element.selectTarget() is FormInt64Control)
        {
            //this.selectMode(SPYPayrollPeriodLine_1_RecId);
        }*/
        this.selectMode(SPYTmpCostDistributionDimValue_DimensionValue);
    
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>task</Name>
				<Source><![CDATA[
    public int task(int _taskId)
    {
        #task
        int ret;
    
        if (_taskId == #taskEnter)
        {
            okButtonClicked = true;
        }
    
        ret = super(_taskId);
    
        return ret;
    
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>SPYTmpCostDistributionDimValue</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            super();
            select SPYTmpCostDistributionDimValue order by DimensionValue;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>DimensionAttributeValueTotallingCriteria</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            super();
            select DimensionAttributeValueTotallingCriteria where DimensionAttributeValueTotallingCriteria.DimensionAttributeValue == SPYTmpCostDistributionDimValue.DimensionAttributeValue;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>OK</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            okButtonClicked = true;
            element.closeSelectRecord(SPYTmpCostDistributionDimValue);
            callerForm.updateDimAttrValue(SPYTmpCostDistributionDimValue.DimensionAttributeValue);
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>SPYTmpCostDistributionDimValue</Name>
			<Table>SPYTmpCostDistributionDimValue</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionAttributeValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>DimensionAttributeValueTotallingCriteria</Name>
			<Table>DimensionAttributeValueTotallingCriteria</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>DimensionAttributeValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FromValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvertTotalSign</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ToValue</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>SPYTmpCostDistributionDimValue</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<AlwaysOnTop xmlns="">Yes</AlwaysOnTop>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Frame xmlns="">Border</Frame>
		<HeightMode xmlns="">Column</HeightMode>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<SaveSize xmlns="">No</SaveSize>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">Lookup</Style>
		<WidthMode xmlns="">Column</WidthMode>
		<WindowResize xmlns="">Fixed</WindowResize>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>BodyArea</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>Group</Type>
				<VerticalSpacingMode>Fixed</VerticalSpacingMode>
				<WidthMode>Auto</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Content</Name>
						<ElementPosition>1879048190</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacingMode>Fixed</VerticalSpacingMode>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GridContainer</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<VerticalSpacingMode>Fixed</VerticalSpacingMode>
								<Width>450</Width>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGridControl">
										<Name>Grid</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Grid</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>SPYTmpCostDistributionDimValue_DimensionValue</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>DimensionValue</DataField>
												<DataSource>SPYTmpCostDistributionDimValue</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>SPYTmpCostDistributionDimValue_Description</Name>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>Description</DataField>
												<DataSource>SPYTmpCostDistributionDimValue</DataSource>
											</AxFormControl>
										</Controls>
										<AlternateRowShading>Yes</AlternateRowShading>
										<DataSource>SPYTmpCostDistributionDimValue</DataSource>
										<MultiSelect>No</MultiSelect>
										<ShowRowLabels>No</ShowRowLabels>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
								<Style>BorderlessGridContainer</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>VSplitter</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<Style>SplitterVerticalContainer</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PreviewGroup</Name>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Skip>Yes</Skip>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>BottomPreview</Name>
										<ElementPosition>1193046470</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Skip>Yes</Skip>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>SPYTmpCostDistributionDimValue_DimensionValue1</Name>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>DimensionValue</DataField>
												<DataSource>SPYTmpCostDistributionDimValue</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>SPYTmpCostDistributionDimValue_Description1</Name>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>Description</DataField>
												<DataSource>SPYTmpCostDistributionDimValue</DataSource>
											</AxFormControl>
										</Controls>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Group_</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGridControl">
												<Name>TotallingGrid</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Grid</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>DimensionAttributeValueTotallingCriteria_FromValue</Name>
														<ElementPosition>858993458</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>FromValue</DataField>
														<DataSource>DimensionAttributeValueTotallingCriteria</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>DimensionAttributeValueTotallingCriteria_ToValue</Name>
														<ElementPosition>1288490187</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>ToValue</DataField>
														<DataSource>DimensionAttributeValueTotallingCriteria</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCheckBoxControl">
														<Name>DimensionAttributeValueTotallingCriteria_InvertTotalSign</Name>
														<ElementPosition>1717986916</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CheckBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<BackgroundColor>WindowBackground</BackgroundColor>
														<DataField>InvertTotalSign</DataField>
														<DataSource>DimensionAttributeValueTotallingCriteria</DataSource>
													</AxFormControl>
												</Controls>
												<Border>None</Border>
												<DataSource>DimensionAttributeValueTotallingCriteria</DataSource>
												<MultiSelect>No</MultiSelect>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<TopMargin>0</TopMargin>
								<TopMarginMode>Fixed</TopMarginMode>
								<ViewEditMode>View</ViewEditMode>
							</AxFormControl>
						</Controls>
						<BottomMargin>0</BottomMargin>
						<BottomMarginMode>Fixed</BottomMarginMode>
						<Columns>3</Columns>
						<Columnspace>0</Columnspace>
						<ColumnspaceMode>Fixed</ColumnspaceMode>
						<LeftMargin>0</LeftMargin>
						<LeftMarginMode>Fixed</LeftMarginMode>
						<RightMargin>0</RightMargin>
						<RightMarginMode>Fixed</RightMarginMode>
						<TopMargin>2</TopMargin>
						<TopMarginMode>Fixed</TopMarginMode>
					</AxFormControl>
				</Controls>
				<BottomMargin>0</BottomMargin>
				<BottomMarginMode>Fixed</BottomMarginMode>
				<LeftMargin>0</LeftMargin>
				<LeftMarginMode>Fixed</LeftMarginMode>
				<RightMargin>0</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<TopMargin>0</TopMargin>
				<TopMarginMode>Fixed</TopMarginMode>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>SelectArea</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>Auto</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1879048190</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCommandButtonControl">
								<Name>OK</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Skip>Yes</Skip>
								<Type>CommandButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Command>Enter</Command>
								<DefaultButton>Yes</DefaultButton>
								<MultiSelect>No</MultiSelect>
								<SaveRecord>No</SaveRecord>
								<Text>@SYS11584</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCommandButtonControl">
								<Name>Cancel</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Skip>Yes</Skip>
								<Type>CommandButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Command>Cancel</Command>
								<Text>@SYS301993</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<Columns>2</Columns>
						<Columnspace>5</Columnspace>
						<ColumnspaceMode>Fixed</ColumnspaceMode>
						<Style>DialogCommitContainer</Style>
					</AxFormControl>
				</Controls>
				<Columns>2</Columns>
				<BackStyle>Opaque</BackStyle>
				<Style>DialogCommit</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>