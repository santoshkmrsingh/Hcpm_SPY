<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SPYBenefitEncashmentEdit</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
/* TODO: (Code Upgrade) [Vertical Button Group Rule] Please manually fix the vertical button group [GroupParametersButtonGroup] in this form, it does not conform to any well known rules. The button group does not have any data source or its data source is not part of any root or linked data source query. */
[Form]
public class SPYBenefitEncashmentEdit extends FormRun implements IDialogable
{
    SPYBenefitEncashmentServiceController       benefitEncashmentServiceController;
    Query                                       workerQuery;
    QueryRun                                    workerQueryRun;
    container                                   workerQueryPack;
    Query                                       benefitQuery;
    QueryRun                                    benefitQueryRun;
    container                                   benefitQueryPack;
    SPYBenefitEncashmentContract                benefitEncashmentContract;
    boolean                                     calledFromMasterProcess;

}
]]></Source>
			</Method>
			<Method>
				<Name>formRun</Name>
				<Source><![CDATA[
    public FormRun formRun()
    {
        //Required by the SysOperation framework.
        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>closedOk</Name>
				<Source><![CDATA[
    public boolean closedOk()
    {
        boolean                     ret;
    
        ret = super();
    
        if(benefitEncashmentContract)
        {
            benefitEncashmentContract.parmLegalEntity(LegalEntity_ReferenceGroup.value());
            benefitEncashmentContract.parmPayrollPeriodLine(PayrollPeriod_ReferenceGroup.value());
            benefitEncashmentContract.parmWorkerQuery(workerQueryPack);
            benefitEncashmentContract.parmBenefitQuery(benefitQueryPack);
            benefitEncashmentContract.parmCheckTrace(checkTrace.value());
            benefitEncashmentContract.parmPayrollParameterState(benefitEncashmentServiceController.parmPayrollParameterState());
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        SPYPayrollParameterState    payrollParameterState;
    
        super();
        if(element.args().caller() && element.args().caller() is SPYBenefitEncashmentServiceController)
        {
            benefitEncashmentServiceController = element.args().caller() as SPYBenefitEncashmentServiceController;
            payrollParameterState = benefitEncashmentServiceController.parmPayrollParameterState();
            if(payrollParameterState && payrollParameterState.parmCalledFromMasterProcess())
            {
                calledFromMasterProcess = true;
            }
            else
            {
                this.initQuery();
            }
        }        
    
        element.setEnable();
        if(benefitEncashmentServiceController.getDataContractObject() is SPYBenefitEncashmentContract)
            benefitEncashmentContract = benefitEncashmentServiceController.getDataContractObject();
    
        element.initializeValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    void initQuery()
    {
        workerQuery = this.initWorkerApplQuery();
        workerQueryRun = new QueryRun(workerQuery);
        benefitQuery = this.initBenefitApplQuery();
        benefitQueryRun = new QueryRun(benefitQuery);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initWorkerApplQuery</Name>
				<Source><![CDATA[
    Query initWorkerApplQuery()
    {
        return new Query(queryStr(SPYHcmWorker_All));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initBenefitApplQuery</Name>
				<Source><![CDATA[
    Query initBenefitApplQuery()
    {
        return new Query(queryStr(SPYBenefitQuery));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initBenefitQuery</Name>
				<Source><![CDATA[
    void  initBenefitQuery()
    {
        if(benefitQueryRun.prompt())
        {
            benefitQueryPack = benefitQueryRun.pack();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeValue</Name>
				<Source><![CDATA[
    public void initializeValue()
    {
        LegalEntity_ReferenceGroup.value(benefitEncashmentContract.parmLegalEntity());
        PayrollPeriod_ReferenceGroup.value(benefitEncashmentContract.parmPayrollPeriodLine());
        workerQueryPack = benefitEncashmentContract.parmWorkerQuery();
        benefitQueryPack = benefitEncashmentContract.parmBenefitQuery();
        checkTrace.value(benefitEncashmentContract.parmCheckTrace());
    }

]]></Source>
			</Method>
			<Method>
				<Name>initWorkerQuery</Name>
				<Source><![CDATA[
    void  initWorkerQuery()
    {
        if(workerQueryRun.prompt())
        {
            workerQueryPack = workerQueryRun.pack();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>runBase</Name>
				<Source><![CDATA[
    SPYBenefitEncashmentServiceController runBase()
    {//Method must be named runBase() for the integration to the Batch dialog to work.
        return benefitEncashmentServiceController;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEnable</Name>
				<Source><![CDATA[
    public void setEnable()
    {
        ChooseWorker.visible(!calledFromMasterProcess);
        ChooseBenefit.visible(!calledFromMasterProcess);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>ChooseWorker</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void  clicked()
        {
            super();
            element.initWorkerQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ChooseBenefit</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void  clicked()
        {
            super();
            element.initBenefitQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OK</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            boolean     ret = true;
        
            if(!LegalEntity_ReferenceGroup.value())
                ret = checkFailed("@SPY375");
            if(!PayrollPeriod_ReferenceGroup.value())
                ret = checkFailed("@SPY1699");
        
            if(ret)
                super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@SPY1700</Caption>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>FormActionPaneControl1</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>GroupParametersButtonGroup</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ChooseWorker</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYS85423</HelpText>
								<Skip>Yes</Skip>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Text>@SPY1426</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ChooseBenefit</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYS85423</HelpText>
								<Skip>Yes</Skip>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Text>@SPY1698</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<Style>Strip</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Group_</Name>
				<ElementPosition>805306366</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GroupParameter</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>LegalEntity_ReferenceGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ReferenceGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<ExtendedDataType>LegalEntityRecId</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>PayrollPeriod_ReferenceGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1503238552</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ReferenceGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<BackStyle>Auto</BackStyle>
								<ExtendedDataType>SPYPayrollPeriodLineRecId</ExtendedDataType>
								<Underline>Yes</Underline>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>CheckTrace</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@SPY491</Label>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<TopMode>BottomEdge</TopMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OK</Name>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormMenuFunctionButtonControl">
						<Name>ButtonBatch</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>MenuFunctionButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<MenuItemName>BatchDialog</MenuItemName>
						<MenuItemType>Action</MenuItemType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>