<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SPYPromotionProcessEdit</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class SPYPromotionProcessEdit extends FormRun implements IDialogable
{
    SPYPromotionProcessServiceController        promotionProcessServiceController;
    Query                                       workerQuery;
    QueryRun                                    workerQueryRun;
    container                                   queryPack;
    SPYPromotionProcessContract                 promotionProcessContract;
    boolean                                     calledFromMasterProcess;


}
]]></Source>
			</Method>
			<Method>
				<Name>formRun</Name>
				<Source><![CDATA[
    public FormRun formRun()
    {
        //Required by the SysOperation framework.
        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>closedOk</Name>
				<Source><![CDATA[
    public boolean closedOk()
    {
        boolean                     ret;

        ret = super();

        if(promotionProcessContract)
        {
            promotionProcessContract.parmWorkerQuery(queryPack);
            promotionProcessContract.parmPayrollParameterState(promotionProcessServiceController.parmPayrollParameterState());
            promotionProcessContract.parmFromDate(DateEditFromDate.dateValue());
            promotionProcessContract.parmPromotionIncrementType(PromotionIncrementType.selection());
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();
        this.initialize();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    void initialize()
    {
        SPYPayrollParameterState    payrollParameterState;

        if(element.args().caller() && element.args().caller() is SPYPromotionProcessServiceController)
        {
            promotionProcessServiceController = element.args().caller() as SPYPromotionProcessServiceController;
            payrollParameterState = promotionProcessServiceController.parmPayrollParameterState();
            if(payrollParameterState && payrollParameterState.parmCalledFromMasterProcess())
            {
                calledFromMasterProcess = true;
            }
            else
            {
                workerQuery = new Query(queryStr(SPYHcmWorker_All));
                workerQueryRun = new QueryRun(workerQuery);
            }
        }
       // super();

        element.setEnable();
        if(promotionProcessServiceController.getDataContractObject() is SPYPromotionProcessContract)
        promotionProcessContract = promotionProcessServiceController.getDataContractObject();

        element.initializeValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeValue</Name>
				<Source><![CDATA[
    public void initializeValue()
    {
        queryPack = promotionProcessContract.parmWorkerQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    void  initQuery()
    {
        if(workerQueryRun.prompt())
        {
            queryPack = workerQueryRun.pack();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>runBase</Name>
				<Source><![CDATA[
    SPYPromotionProcessServiceController runBase()
    {
        //Method must be named runBase() for the integration to the Batch dialog to work.
        return promotionProcessServiceController;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEnable</Name>
				<Source><![CDATA[
    public void setEnable()
    {
        //Choose.visible(!calledFromMasterProcess);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>GroupParameter</Name>
				<Type>Group</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        void clicked()
        {
            boolean     ret = true;

            if(DateEditFromDate.dateValue() == dateNull())
            {
                ret = checkFailed("@SPY1973");
            }

            if(ret)
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@SPY1907</Caption>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>FormActionPaneControl1</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<Style>Strip</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Group_</Name>
				<ElementPosition>805306366</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GroupParameter</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>PromotionIncrementType</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<EnumType>SPYPromotionIncrementType</EnumType>
								<Label>@SPY1915</Label>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>DateEditFromDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Date</Type>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>FromDate</ExtendedDataType>
								<Label>@SPY1896</Label>
							</AxFormControl>
						</Controls>
						<Columns>2</Columns>
					</AxFormControl>
				</Controls>
				<Columns>2</Columns>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1610612734</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OK</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormMenuFunctionButtonControl">
						<Name>ButtonBatch</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>MenuFunctionButton</Type>
						<FormControlExtension
							i:nil="true" />
						<MenuItemName>BatchDialog</MenuItemName>
						<MenuItemType>Action</MenuItemType>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>